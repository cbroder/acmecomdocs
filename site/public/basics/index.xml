<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basics on Acumatica eCommerce Edition</title>
    <link>http://acmecomdocs.netlify.com/basics/index.xml</link>
    <description>Recent content in Basics on Acumatica eCommerce Edition</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Apr 2016 16:50:16 +0200</lastBuildDate>
    <atom:link href="http://acmecomdocs.netlify.com/basics/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction</title>
      <link>http://acmecomdocs.netlify.com/basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://acmecomdocs.netlify.com/basics/</guid>
      <description>

&lt;h3 id=&#34;chapter-1&#34;&gt;Chapter 1&lt;/h3&gt;

&lt;h1 id=&#34;acumatica-ecommerce-edition-documentation&#34;&gt;Acumatica eCommerce Edition Documentation&lt;/h1&gt;

&lt;p&gt;Magento Connector combines the power of Acumatica Cloud ERP with the leading e-commerce platform in the world, Magento. This extension tightly integrates the two platforms through a two-way synchronization, eliminating the need for redundant data and information entry processes.&lt;/p&gt;

&lt;p&gt;The Magento Connector allows Acumatica to become an omnichannel that can act as one e-commerce platform for businesses to manage inventory, fulfillment, orders, sales, and more. Magento Connector is a must-have for any Acumatica and Magento user looking to increase the efficiency and sales of their e-commerce business.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acumatica Ecommerce Edition documentation</title>
      <link>http://acmecomdocs.netlify.com/basics/acumatica-ecommerce-edition-documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://acmecomdocs.netlify.com/basics/acumatica-ecommerce-edition-documentation/</guid>
      <description>

&lt;h3 id=&#34;1-1-introduction&#34;&gt;1.1 Introduction&lt;/h3&gt;

&lt;p&gt;Thank you for purchasing the Acumatica eCommerce EditionÂ® for your Business. This document will
help you to configure the settings and guide you to use the key features of Acumatica-Magento Connector.&lt;/p&gt;

&lt;h3 id=&#34;1-2-dataflow&#34;&gt;1.2 Dataflow&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;images/dataflow.jpg&#34; alt=&#34;Connecter Dataflow&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Requirements</title>
      <link>http://acmecomdocs.netlify.com/basics/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://acmecomdocs.netlify.com/basics/requirements/</guid>
      <description>&lt;p&gt;Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.&lt;/p&gt;

&lt;p&gt;Just download &lt;a href=&#34;https://gohugo.io/overview/installing/&#34;&gt;Hugo&lt;/a&gt; binary for your OS (Windows, Linux, Mac) : it&amp;rsquo;s that simple.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;images/magic.gif?classes=shadow&#34; alt=&#34;Magic&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>http://acmecomdocs.netlify.com/basics/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://acmecomdocs.netlify.com/basics/installation/</guid>
      <description>

&lt;p&gt;The following steps are here to help you initialize your new website. If you don&amp;rsquo;t know Hugo at all, we strongly suggest you to train by following this &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;great documentation for beginners&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;create-your-project&#34;&gt;Create your project&lt;/h2&gt;

&lt;p&gt;Hugo provides a &lt;code&gt;new&lt;/code&gt; command to create a new website.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site &amp;lt;new_project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-the-theme&#34;&gt;Install the theme&lt;/h2&gt;

&lt;p&gt;Install the &lt;strong&gt;Hugo-theme-learn&lt;/strong&gt; theme by following &lt;a href=&#34;https://gohugo.io/themes/installing/&#34;&gt;this documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The theme&amp;rsquo;s repository is: &lt;a href=&#34;https://github.com/matcornic/hugo-theme-learn.git&#34;&gt;https://github.com/matcornic/hugo-theme-learn.git&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;basic-configuration&#34;&gt;Basic configuration&lt;/h2&gt;

&lt;p&gt;When building the website, you can set a theme by using &lt;code&gt;--theme&lt;/code&gt; option. We suggest you to edit your configuration file and set the theme by default. Example with &lt;code&gt;config.toml&lt;/code&gt; format.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;theme = &amp;quot;hugo-theme-learn&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-your-first-chapter-page&#34;&gt;Create your first chapter page&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hugo-theme-learn&lt;/strong&gt; provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new --kind chapter basics/index.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-your-first-content-pages&#34;&gt;Create your first content pages&lt;/h2&gt;

&lt;p&gt;Then, create content pages inside the previous chapter. Here are two ways to create content in the chapter :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new basics/first-content.md
hugo new basics/second-content/index.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;enable-search-functionality&#34;&gt;Enable search functionality&lt;/h2&gt;

&lt;p&gt;As the index generation is not yet supported by Hugo (&lt;a href=&#34;https://github.com/spf13/hugo/pull/1853&#34;&gt;PR #1853&lt;/a&gt;),
we decided to use &lt;code&gt;lunr&lt;/code&gt; index.
As soon as the generation of the index will be supported by hugo, we will use the official format.&lt;/p&gt;

&lt;p&gt;So to use the &lt;code&gt;search&lt;/code&gt; functionality, you just have to put a &lt;code&gt;lunr&lt;/code&gt; index which respects this format :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
    {
        &amp;quot;uri&amp;quot;: &amp;quot;/docs/01-start/index&amp;quot;,
        &amp;quot;title&amp;quot;: &amp;quot;Get started&amp;quot;,
        &amp;quot;content&amp;quot;: &amp;quot;\n\nGet started\n\nAll you need to know...\n&amp;quot;,
        &amp;quot;tags&amp;quot;: [&amp;quot;start&amp;quot;, &amp;quot;intro&amp;quot;]
    },
    ...
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;into a &lt;code&gt;static/json/search.json&lt;/code&gt; file in your hugo project.&lt;/p&gt;

&lt;p&gt;And set &lt;code&gt;search = true&lt;/code&gt; in your config.toml&lt;/p&gt;

&lt;p&gt;To generate your lunr index, you can see this project &lt;a href=&#34;https://github.com/gwleclerc/lunr-hugo&#34;&gt;https://github.com/gwleclerc/lunr-hugo&lt;/a&gt; which parse your markdown files and extract toml and yaml headers to create index with corresponding format.&lt;/p&gt;

&lt;p&gt;In order to generate the index of your static site launch the following comand after installing &lt;code&gt;lunr-hugo&lt;/code&gt; using &lt;code&gt;npm&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    lunr-hugo -i &amp;quot;&amp;lt;content directory&amp;gt;/**/*.md&amp;quot; -o static/json/search.json -l &amp;lt;header format (yaml or toml)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;launching-the-website&#34;&gt;Launching the website&lt;/h2&gt;

&lt;p&gt;Launch the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo serve
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go to &lt;code&gt;http://localhost:1313/basics&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you are curious, at the home page (&lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;), you should see an empty homepage. It&amp;rsquo;s because this theme does not really provide a default homepage.&lt;/p&gt;

&lt;p&gt;You typically have 2 choices :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create an &lt;a href=&#34;https://gohugo.io/templates/homepage/&#34;&gt;overview homepage&lt;/a&gt; for your project. Write an &lt;code&gt;index.html&lt;/code&gt; file in &lt;em&gt;layouts/&lt;/em&gt; folder.&lt;/li&gt;
&lt;li&gt;Create a redirection to one your documentation page. Either by:

&lt;ol&gt;
&lt;li&gt;Configuring your server to automatically redirect homepage to one your documentation page - &lt;em&gt;Recommended&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Creating an empty html page with the following code in the head tag :&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;  &amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot; content=&amp;quot;0; url=http://example.com/&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>http://acmecomdocs.netlify.com/basics/configuration/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>http://acmecomdocs.netlify.com/basics/configuration/</guid>
      <description>

&lt;h2 id=&#34;site-configuration&#34;&gt;Site configuration&lt;/h2&gt;

&lt;p&gt;On top of &lt;a href=&#34;https://gohugo.io/overview/configuration/&#34;&gt;Hugo global configuration&lt;/a&gt;, &lt;strong&gt;Testing&lt;/strong&gt; lets you define the following parameters :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
  # Prefix URL to edit current page. Useful to give opportunity to people to create merge request for your doc.
  # See the config.toml file from this documentation site to have an example.
  editURL = &amp;quot;&amp;quot;
  # Author of the site, will be used in meta information
  author = &amp;quot;&amp;quot;
  # Description of the site, will be used in meta information
  description = &amp;quot;&amp;quot;
  # Shows a checkmark for visited pages on the menu. Default to false
  showVisitedLinks = false
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;notices tip&#34; &gt;&lt;p&gt;Assets are based on the &lt;code&gt;baseurl&lt;/code&gt; of the site. So, don&amp;rsquo;t forget to configure yours in the &lt;code&gt;config.toml&lt;/code&gt; file. Absolutely needed for Github pages like &lt;a href=&#34;http://userid.github.io/project&#34;&gt;http://userid.github.io/project&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;h2 id=&#34;style-customization&#34;&gt;Style customization&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hugo-theme-learn&lt;/strong&gt; has been built to be as configurable as possible by defining multiple &lt;a href=&#34;https://gohugo.io/templates/partials/&#34;&gt;partials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;themes/hugo-theme-learn/layouts/partials/&lt;/code&gt;, you will find all the partials defined for this theme. If you need to overwrite something, don&amp;rsquo;t change the code directly. Instead &lt;a href=&#34;https://gohugo.io/themes/customizing/&#34;&gt;follow this page&lt;/a&gt;. You&amp;rsquo;d create a new partial in the &lt;code&gt;layouts/partials&lt;/code&gt; folder of your local project. This partial will have the priority.&lt;/p&gt;

&lt;p&gt;This theme defines the following partials :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;header&lt;/em&gt;: the header of the content page (contains the breadcrumbs)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;style&lt;/em&gt;: CSS imports, in case you want to override the style&lt;/li&gt;
&lt;li&gt;&lt;em&gt;footer&lt;/em&gt;: the footer of the content page (contains the arrows)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;script&lt;/em&gt;:  Javacript includes, in case you want to add Javascript on top of provided ones&lt;/li&gt;
&lt;li&gt;&lt;em&gt;favicon&lt;/em&gt;: the favicon&lt;/li&gt;
&lt;li&gt;&lt;em&gt;logo&lt;/em&gt;: the logo, on top left hand corner.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;meta&lt;/em&gt;: HTML meta tags, if you want to change default behavior&lt;/li&gt;
&lt;li&gt;&lt;em&gt;toc&lt;/em&gt;: table of contents&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;change-the-logo&#34;&gt;Change the logo&lt;/h3&gt;

&lt;p&gt;Create a new file in &lt;code&gt;layouts/partials/&lt;/code&gt; named &lt;code&gt;logo.html&lt;/code&gt;. Then write any HTML you want.
You could use an &lt;code&gt;img&lt;/code&gt; HTML tag and reference an image created under the &lt;em&gt;static&lt;/em&gt; folder, or you could paste a SVG definition !&lt;/p&gt;

&lt;div class=&#34;notices note&#34; &gt;&lt;p&gt;The size of the logo will adapt automatically&lt;/p&gt;
&lt;/div&gt;


&lt;h3 id=&#34;change-the-favicon&#34;&gt;Change the favicon&lt;/h3&gt;

&lt;p&gt;If your favicon is a png, just drop off your image in your local &lt;code&gt;static/images/&lt;/code&gt; folder and names it &lt;code&gt;favicon.png&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you need to change this default behavior, create a new file in &lt;code&gt;layouts/partials/&lt;/code&gt; named &lt;code&gt;favicon.html&lt;/code&gt;. Then write something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;shortcut icon&amp;quot; href=&amp;quot;/images/favicon.png&amp;quot; type=&amp;quot;image/x-icon&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;change-default-colors&#34;&gt;Change default colors&lt;/h3&gt;

&lt;p&gt;To change default colors, you will have to add a new css file. In order to do that :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a css file in your local &lt;code&gt;static/css/&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Create a partial HTML in your local &lt;code&gt;layouts/partials/&lt;/code&gt; named &lt;code&gt;style.html&lt;/code&gt; and add the following line&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&amp;quot;/css/yourfile.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, create CSS in the new file, overwriting default behavior. Don&amp;rsquo;t panic, we give you, just below, colors that are commonly changed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* background behind the logo*/
#header {
    background: &amp;lt;color&amp;gt;;
    border-color: &amp;lt;color&amp;gt;;
}

/* Background color of the menu */
#sidebar {
  background-color: &amp;lt;color&amp;gt;;
}

/* Background color of the menu, when clicked */
#sidebar ul.topics &amp;gt; li.parent, #sidebar ul.topics &amp;gt; li.active {
  background-color: &amp;lt;color&amp;gt;;
}

/* Color of all links, including arrows to get to previous and next pages */
a {
    color: &amp;lt;color&amp;gt;;
}
a:hover {
   color: &amp;lt;color&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>